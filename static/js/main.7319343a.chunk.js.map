{"version":3,"sources":["imgs/check.svg","imgs/check-complete.svg","conponents/TaskForm.js","conponents/Search.js","conponents/Sort.js","conponents/Control.js","conponents/List.js","App.js","serviceWorker.js","index.js","imgs/plus.svg","imgs/close.svg","imgs/cross.svg","imgs/search.svg","imgs/sort-a-z.svg","imgs/sort-z-a.svg","imgs/pencil.svg","imgs/bin.svg"],"names":["module","exports","TaskForm","props","onCloseForm","state","id","name","status","onFormChange","bind","onFormSubmit","event","preventDefault","this","trim","task","randomString","generate","onAddTask","onEditTask","target","value","setState","taskEditing","className","onSubmit","src","closeIcon","alt","onClick","type","ref","onChange","plusIcon","crossIcon","Component","Search","onSerachTask","onValueSearch","refs","search","placeholder","searchIcon","Sort","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","sortIconA","sortIconZ","Control","onSearch","List","onEditForm","idTask","onRemoveTask","onChecked","filterList","filterName","filterStatus","onValueFilter","list","scope","length","map","item","index","key","checkCompleteIcon","checkIcon","pencilIcon","binIcon","App","onToggleForm","displayTaskForm","tasks","addTask","newTasks","saveLocalStorage","editTask","idTaskNumber","parseInt","slice","filter","toLowerCase","console","log","valueSort","sort","dataTasks","JSON","parse","localStorage","getItem","setItem","stringify","indexOf","a","b","returned","classNames","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7319343a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check.5ff4dfc9.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-complete.a726e473.svg\";","import React, { Component } from 'react';\r\nimport randomString from 'randomstring';\r\n// images\r\nimport closeIcon from '../imgs/close.svg';\r\nimport plusIcon from '../imgs/plus.svg';\r\nimport crossIcon from '../imgs/cross.svg';\r\n\r\nexport default class TaskForm extends Component {\r\n  // cÃ³ntructor\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      name: '',\r\n      status: false\r\n    }\r\n    this.onFormChange = this.onFormChange.bind(this);\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n  }\r\n\r\n  // close form\r\n  onCloseForm = () => {\r\n    this.props.onCloseForm();\r\n  }\r\n\r\n  // prevent submit form and add task\r\n  onFormSubmit(event) {\r\n    event.preventDefault();\r\n    // add task\r\n    const { id, name } = this.state;\r\n    if (id === '') {\r\n      if (name.trim() !== '') {\r\n        const task = {\r\n          id: randomString.generate(),\r\n          name: this.state.name,\r\n          status: this.state.status === 'true' ? true : false\r\n        }\r\n        this.props.onAddTask(task);\r\n      } \r\n    }else {\r\n      // edit task\r\n      if (name.trim() !== '') {\r\n        const task = {\r\n          id: this.state.id,\r\n          name: this.state.name,\r\n          status: this.state.status === 'true' ? true : false\r\n        }\r\n        this.props.onEditTask(task);\r\n      }\r\n    }\r\n    // reset form\r\n    this.onCloseForm();\r\n  }\r\n\r\n  // change task form\r\n  onFormChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    let value = target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  // Khi mÃ  form ÄÆ°á»£c gáº¯n vÃ o (hiá»n thá»)\r\n  componentWillMount() {\r\n    const { taskEditing } = this.props;\r\n    if (taskEditing) {\r\n      this.setState({\r\n        id: taskEditing.id,\r\n        name: taskEditing.name,\r\n        status: taskEditing.status\r\n      });\r\n    }\r\n  }\r\n\r\n  // rendering ....\r\n  render() {\r\n    const { id, name, status } = this.state;\r\n    return (\r\n      <div className=\"TaskForm col-sm-12 col-md-4\">\r\n        <form onSubmit={this.onFormSubmit}>\r\n          <h5 className=\"heading\">\r\n            {id === '' ? 'ThÃªm CÃ´ng Viá»c' : 'Sá»­a CÃ´ng Viá»c'}\r\n            <img className=\"icon-btn close-icon\" src={closeIcon} alt=\"close\" onClick={this.onCloseForm} />\r\n          </h5>\r\n          <div className=\"form-content\">\r\n            <div className=\"name form-item\">\r\n              <label>TÃªn:</label>\r\n              <input type=\"text\" ref=\"name\" value={name} name=\"name\" onChange={this.onFormChange} />\r\n            </div>\r\n            <div className=\"status form-item\">\r\n              <label>Tráº¡ng thÃ¡i:</label>\r\n              <select value={status} name=\"status\" onChange={this.onFormChange}>\r\n                <option value={false}>Äang LÃ m</option>\r\n                <option value={true}>HoÃ n ThÃ nh</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"button-group\">\r\n              <button className=\"btn btn-success\" onClick={this.onFormSubmit}>\r\n                <img className=\"icon-btn\" src={plusIcon} alt=\"icon\" />\r\n                LÆ°u Láº¡i\r\n                  </button>\r\n              <button className=\"btn btn-danger\" onClick={this.onCloseForm}>\r\n                <img className=\"icon-btn\" src={crossIcon} alt=\"icon\" />\r\n                Huá»· Bá»\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport searchIcon from '../imgs/search.svg';\r\n\r\nexport default class Search extends Component {\r\n  onSerachTask = () =>{\r\n    this.props.onValueSearch(this.refs.search.value);\r\n    this.refs.search.value = '';\r\n  }\r\n  // rendering ....\r\n  render() {\r\n    return (\r\n      <div className=\"Search\">\r\n        <input type=\"text\" name=\"search\" ref=\"search\" placeholder=\"Nháº­p tá»« khoÃ¡ ...\" />\r\n        <button className=\"btn btn-primary search-btn\" onClick={this.onSerachTask}>\r\n          <img src={searchIcon} alt=\"icon\" className=\"icon-btn\" />\r\n          TÃ¬m\r\n              </button>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\n// imgs\r\nimport sortIconA from '../imgs/sort-a-z.svg'\r\nimport sortIconZ from '../imgs/sort-z-a.svg'\r\nexport default class Sort extends Component {\r\n    onClick = (value) => {\r\n        this.props.onSort(value);\r\n    }\r\n    // rendering ........\r\n    render() {\r\n        return (\r\n            <div className=\"Sort\">\r\n                <div className=\"btn-group\">\r\n                    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"false\">\r\n                        Sáº¯p xáº¿p\r\n                   </button>\r\n                    <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"triggerId\">\r\n                        <a className=\"dropdown-item\" onClick={() => this.onClick(1)}>\r\n                            <img className=\"sort-icon\" src={sortIconA} /> <span>A-Z</span>\r\n                        </a>\r\n                        <a className=\"dropdown-item\" onClick={() => this.onClick(0)}>\r\n                            <img className=\"sort-icon\" src={sortIconZ} /> <span>Z-A</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\n\r\nexport default class Control extends Component {\r\n    onSearch = (value) => {\r\n        this.props.onSearch(value);\r\n    }\r\n\r\n    onSort = (value) =>{\r\n        this.props.onSort(value);\r\n    }\r\n    // rendering...\r\n    render() {\r\n        return (\r\n            <div className=\"FormControl\">\r\n                <div className=\"control\">\r\n                    <Search onValueSearch={this.onSearch} />\r\n                    <Sort onSort={this.onSort}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n// imgs\r\nimport pencilIcon from '../imgs/pencil.svg';\r\nimport binIcon from '../imgs/bin.svg';\r\nimport checkIcon from '../imgs/check.svg';\r\nimport checkCompleteIcon from '../imgs/check-complete.svg';\r\n\r\nexport default class List extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterName: '',\r\n            filterStatus: -1 //-1 all, 0 active, 1 completed\r\n        }\r\n    }\r\n\r\n    //tra ve thong tin task can sua \r\n    onEditForm = (event) => {\r\n        const idTask = event.target.id;\r\n        this.props.onEditForm(idTask);\r\n    }\r\n\r\n    //tra ve thong tin task can xoa \r\n    onRemoveTask = (event) => {\r\n        const idTask = event.target.id;\r\n        this.props.onRemoveTask(idTask);\r\n    }\r\n\r\n    onChecked = (event) => {\r\n        this.props.onChecked(event.target.id);\r\n    }\r\n\r\n    filterList = (event) => {\r\n        const { filterName, filterStatus } = this.state;\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        this.props.onValueFilter(\r\n            name === 'filterName' ? value : filterName,\r\n            name === 'filterStatus' ? value : filterStatus\r\n        );\r\n    }\r\n    // rendering ....\r\n    render() {\r\n        const { list } = this.props;\r\n        const { filterName, filterStatus } = this.state;\r\n        return (\r\n            <div className=\"List\">\r\n                <table className=\"table table-bordered\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th scope=\"col\">STT</th>\r\n                            <th scope=\"col\">TÃªn</th>\r\n                            <th scope=\"col\">Tráº¡ng ThÃ¡i</th>\r\n                            <th scope=\"col\">HÃ nh Äá»ng</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {/* filter */}\r\n                        <tr>\r\n                            <td></td>\r\n                            <td className=\"name-filter filter\">\r\n                                <input placeholder=\"Nháº­p 1 tÃªn Äá» lá»c\" name=\"filterName\" value={filterName} onChange={this.filterList} type=\"text\" />\r\n                            </td>\r\n                            <td className=\"status-filter filter\">\r\n                                <select value={filterStatus} name=\"filterStatus\" onChange={this.filterList}>\r\n                                    <option value={-1}>Táº¥t Cáº£</option>\r\n                                    <option value={0}>Äang LÃ m</option>\r\n                                    <option value={1}>HoÃ n ThÃ nh</option>\r\n                                </select>\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                        {/* list */}\r\n                        {\r\n                            list.length > 0 && list.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <th scope=\"row\">{index + 1}</th>\r\n                                        <td className=\"name-task\"><p>{item.name}</p></td>\r\n                                        <td className=\"td-status\">\r\n                                            <img\r\n                                                className=\"status-icon\"\r\n                                                id={index}\r\n                                                src={item.status ? checkCompleteIcon : checkIcon}\r\n                                                onClick={this.onChecked} />\r\n                                        </td>\r\n                                        <td className=\"td-btn\">\r\n                                            <button id={index} className=\"btn btn-warning\" onClick={this.onEditForm}>\r\n                                                <img className=\"icon-btn\" src={pencilIcon} alt=\"icon\" /> Sá»­a\r\n                                            </button>\r\n                                            <button id={index} className=\"btn btn-danger\" onClick={this.onRemoveTask}>\r\n                                                <img className=\"icon-btn\" src={binIcon} alt=\"icon\" /> XoÃ¡\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n// bootstrap & reactstrap\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// classnames\r\nimport classNames from 'classnames';\r\n// components\r\nimport TaskForm from './conponents/TaskForm';\r\nimport Control from './conponents/Control';\r\nimport List from './conponents/List';\r\n// imgs\r\nimport plusIcon from './imgs/plus.svg';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [],\r\n      displayTaskForm: false,\r\n      taskEditing: {\r\n        id: '',\r\n        name: '',\r\n        status: false,\r\n      },\r\n      filter: {\r\n        name: '',\r\n        status: -1\r\n      },\r\n      sort: -1\r\n    }\r\n  }\r\n\r\n  // Lay du lieu tu local Storage\r\n  componentWillMount() {\r\n    let dataTasks = JSON.parse(localStorage.getItem('tasks'));\r\n    if (!dataTasks) {\r\n      dataTasks = [];\r\n    }\r\n    this.setState({\r\n      tasks: dataTasks\r\n    })\r\n  }\r\n\r\n  // toggle form and reset form\r\n  onToggleForm = () => {\r\n    this.setState({\r\n      displayTaskForm: !this.state.displayTaskForm,\r\n      taskEditing: {\r\n        id: '',\r\n        name: '',\r\n        status: false\r\n      }\r\n    });\r\n  }\r\n\r\n  // lay task dang edit\r\n  onEditForm = (idTask) => {\r\n    // open form\r\n    this.setState({\r\n      displayTaskForm: true,\r\n      taskEditing: this.state.tasks[idTask]\r\n    });\r\n  }\r\n\r\n  // luu vao local storage\r\n  saveLocalStorage(newTasks) {\r\n    localStorage.setItem('tasks', JSON.stringify(newTasks));\r\n  }\r\n\r\n  // add task\r\n  addTask = (task) => {\r\n    const newTasks = [...this.state.tasks, task];\r\n    // them task vao list\r\n    this.setState({\r\n      tasks: newTasks\r\n    });\r\n    this.saveLocalStorage(newTasks);\r\n  }\r\n\r\n  // edit task\r\n  editTask = (task) => {\r\n    // tim phan tu can sua\r\n    const newTasks = this.state.tasks.map((item) => item.id !== task.id ? item : { ...item, name: task.name, status: task.status });\r\n    this.setState({\r\n      tasks: newTasks\r\n    });\r\n    this.saveLocalStorage(newTasks);\r\n  }\r\n\r\n  // xoa task\r\n  onRemoveTask = (idTask) => {\r\n    const idTaskNumber = parseInt(idTask);\r\n    const { tasks } = this.state;\r\n    const newTasks = [...tasks.slice(0, idTaskNumber), ...tasks.slice(idTaskNumber + 1)];\r\n    this.setState({\r\n      tasks: newTasks\r\n    });\r\n    this.saveLocalStorage(newTasks);\r\n  }\r\n\r\n  // check completed\r\n  onChecked = (idTask) => {\r\n    const newTasks = this.state.tasks.map((item, index) => index !== parseInt(idTask) ? item : { ...item, status: !item.status });\r\n    this.setState({\r\n      tasks: newTasks\r\n    });\r\n    this.saveLocalStorage(newTasks);\r\n  }\r\n\r\n  // filter list\r\n  filterList = (filterName, filterStatus) => {\r\n    this.setState({\r\n      filter: {\r\n        name: filterName.toLowerCase(),\r\n        status: parseInt(filterStatus, 10)\r\n      }\r\n    });\r\n  }\r\n  // search\r\n  onSearch = (value) => {\r\n    console.log(value)\r\n    this.setState({\r\n      filter: {\r\n        name: value.toLowerCase(),\r\n        status: this.state.filter.status\r\n      }\r\n    })\r\n  }\r\n\r\n  //sort tasks\r\n  onSort = (valueSort) => {\r\n    this.setState({\r\n      sort: parseInt(valueSort)\r\n    });\r\n  }\r\n  // rendering ...........\r\n  render() {\r\n    let { tasks, displayTaskForm, taskEditing, filter, sort } = this.state;\r\n    // filter tasks\r\n    if (filter) {\r\n      if (filter.name) {\r\n        tasks = tasks.filter((item) => item.name.toLowerCase().indexOf(filter.name) !== -1);\r\n      }\r\n      if (filter.status !== -1) {\r\n        tasks = tasks.filter((item) => item.status == filter.status);\r\n      }\r\n    }\r\n    // sort tasks\r\n    if (sort !== -1) {\r\n      tasks.sort((a, b) => {\r\n        const returned = sort === 1 ? 1 : -1;\r\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return returned;\r\n        else if (a.name.toLowerCase() < b.name.toLowerCase()) return -returned;\r\n        return 0;\r\n      })\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n\r\n            {/*============ header ===============*/}\r\n            <header className=\"col-sm-12\">\r\n              <h1 className=\"heading\">Quáº£n lÃ½ cÃ´ng viá»c</h1>\r\n            </header>\r\n\r\n            {/*============ task form ===============*/}\r\n            {displayTaskForm ? <TaskForm\r\n              taskEditing={taskEditing}\r\n              onCloseForm={this.onToggleForm}\r\n              onAddTask={this.addTask}\r\n              onEditTask={this.editTask} /> : ''}\r\n\r\n            {/*============ main task ===============*/}\r\n            <div className={classNames({\r\n              'main-content col-sm-12': true,\r\n              'col-md-8': displayTaskForm,\r\n              'col-md-12': !displayTaskForm\r\n            })}>\r\n              {/* =========== add task button ======== */}\r\n              <button className=\"add-btn btn btn-primary mb-4\" onClick={this.onToggleForm}>\r\n                <img className=\"icon-btn\" src={plusIcon} alt=\"icon\" />\r\n                ThÃªm cÃ´ng viá»c\r\n              </button>\r\n\r\n              {/* =========== search, sort ======== */}\r\n              <Control onSearch={this.onSearch} onSort={this.onSort} />\r\n\r\n              {/* =========== task list ======== */}\r\n              <List\r\n                list={tasks}\r\n                onEditForm={this.onEditForm}\r\n                onRemoveTask={this.onRemoveTask}\r\n                onChecked={this.onChecked}\r\n                onValueFilter={this.filterList} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/plus.96f7f42c.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.db093ba0.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.4119680f.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.a525307c.svg\";","module.exports = __webpack_public_path__ + \"static/media/sort-a-z.12573be8.svg\";","module.exports = __webpack_public_path__ + \"static/media/sort-z-a.88956179.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.0024d862.svg\";","module.exports = __webpack_public_path__ + \"static/media/bin.7f608b96.svg\";"],"sourceRoot":""}